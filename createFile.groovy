

File activityBaseFile = new File("StubActivity.java.template")
File appBaseFile = new File("StubApplication.java.template")
APP_NOTE='//do NOT edit this file, auto-generated by createTemplage.groovy from ' + appBaseFile.name
ACT_NOTE='//do NOT edit this file, auto-generated by createTemplage.groovy from ' + activityBaseFile.name
println 'appBaseFile:  ' + appBaseFile
println 'activityBaseFile: ' + activityBaseFile
LOOP = 17

def genActivityFile(File templateFile, File file, String newBaseClassName, String stubName) {
    i = 0
    file.mkdir()
    file.delete()
    className = 'CLASS_NAME'
    baseClassName = 'BASE_CLAZZ_NAME'
    stub = 'STUB'
//    println 'className: ' + className
 //   println 'baseClassName: ' + baseClassName

    newClassName = file.getName()
    newClassName = newClassName.substring(0, newClassName.length() - 5)
    println 'crated file: ' + file
    println 'newClassName: ' + newClassName + ' newBaseClassName: ' + newBaseClassName + ' stubName: ' + stubName
    templateFile.eachLine {
        if (it.contains(className)) {
            it = it.replaceAll(className, newClassName)
        } 
        if (it.contains(baseClassName)) {
	    it = it.replaceAll(baseClassName, newBaseClassName)
        }
        if (it.contains(stub)) {
            it = it.replaceAll(stub, stubName)
        }
        //it = it.replaceAll(/\(.*\)ActivityAgent\( mActivityStub.*\)/, '\1' + stubName + '\2')
        //it = it.replaceAll(/\(.*\)ActivityAgent\(.*\)/, '\1' + stubName + '\2')
        if (stubIsActivity(stubName)) {
           it = it.replaceAll(/mActivityStub.onCreate\(/, 'ActivityReflectUtil.onCreate(mActivityStub, ');
           it = it.replaceAll(/mActivityStub.onPostCreate\(/, 'ActivityReflectUtil.onPostCreate(mActivityStub, ');
           it = it.replaceAll(/mActivityStub.onRestoreInstanceState\(/, 'ActivityReflectUtil.onRestoreInstanceState(mActivityStub, ');
           it = it.replaceAll(/mActivityStub.onStart\(/, 'ActivityReflectUtil.onStart(mActivityStub');
           it = it.replaceAll(/mActivityStub.onRestart\(/, 'ActivityReflectUtil.onRestart(mActivityStub');
           it = it.replaceAll(/mActivityStub.onResume\(/, 'ActivityReflectUtil.onResume(mActivityStub');
           it = it.replaceAll(/mActivityStub.onPostResume\(/, 'ActivityReflectUtil.onPostResume(mActivityStub');
           it = it.replaceAll(/mActivityStub.onPause\(/, 'ActivityReflectUtil.onPause(mActivityStub');
           it = it.replaceAll(/mActivityStub.onStop\(/, 'ActivityReflectUtil.onStop(mActivityStub');
           it = it.replaceAll(/mActivityStub.onDestroy\(/, 'ActivityReflectUtil.onDestroy(mActivityStub');

           it = it.replaceAll(/mActivityStub.onTitleChanged\(/, 'ActivityReflectUtil.onTitleChanged(mActivityStub, ');
           it = it.replaceAll(/mActivityStub.onUserLeaveHint\(/, 'ActivityReflectUtil.onUserLeaveHint(mActivityStub');

           it = it.replaceAll(/mActivityStub.onCreateDialog\(/, 'ActivityReflectUtil.onCreateDialog(mActivityStub, ');
           it = it.replaceAll(/mActivityStub.onPrepareDialog\(/, 'ActivityReflectUtil.onPrepareDialog(mActivityStub, ');

           it = it.replaceAll(/mActivityStub.onMenuItemSelected\(/, 'ActivityReflectUtil.onMenuItemSelected(mActivityStub, ');
           it = it.replaceAll(/mActivityStub.onPrepareOptionsPanel\(/, 'ActivityReflectUtil.onPrepareOptionsPanel(mActivityStub, ');
           it = it.replaceAll(/mActivityStub.onPreparePonCreatePanelViewanel\(/, 'ActivityReflectUtil.onPreparePonCreatePanelViewanel(mActivityStub, ');
        }

        file.append(it)
        file.append("\n")

        i++
        if (i % LOOP  == 0) {
           file.append(ACT_NOTE)
           file.append "\n"
        }
   }
}

def genApplicationFile(File templateFile, File file, String stubName) {
    i = 0
    file.mkdir()
    file.delete()
    className = 'CLASS_NAME'
    stub = 'STUB'
//    println 'className: ' + className
 //   println 'baseClassName: ' + baseClassName

    newClassName = file.getName()
    newClassName = newClassName.substring(0, newClassName.length() - 5)
    println 'crated file: ' + file
    println 'newClassName: ' + newClassName + ' stubName: ' + stubName
    templateFile.eachLine {
        if (it.contains(className)) {
            it = it.replaceAll(className, newClassName)
        } 
        if (it.contains(stub)) {
            it = it.replaceAll(stub, stubName)
        }
        //it = it.replaceAll(/\(.*\)ActivityAgent\( mActivityStub.*\)/, '\1' + stubName + '\2')
        //it = it.replaceAll(/\(.*\)ActivityAgent\(.*\)/, '\1' + stubName + '\2')

        file.append(it)
        file.append("\n")

        i++
        if (i % LOOP == 0) {
           file.append(APP_NOTE)
           file.append "\n"
        }
   }
}

def stubIsActivity(String className) {
   return className == "Activity"
}

genApplicationFile appBaseFile, new File("src/org/bbs/osgi/activity/AbsApplication.java"), 'ApplicationAgent'
genApplicationFile appBaseFile, new File("src/org/bbs/osgi/activity/ApplicationWrapper.java"), 'Application'

genActivityFile activityBaseFile, new File("src/org/bbs/osgi/activity/AbsBundleActivity.java"), 'FragmentActivity', 'ActivityAgent'
genActivityFile activityBaseFile, new File("src/org/bbs/osgi/activity/AbsActivityWraper.java"), 'FragmentActivity', 'Activity'
