package org.bbs.apklauncher.emb;

import java.io.FileDescriptor;
import java.io.PrintWriter;

import android.annotation.SuppressLint;
import android.app.ActionBar;
import android.app.Activity;
import android.app.ActivityManager.TaskDescription;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.LoaderManager;
import android.app.PendingIntent;
import android.app.SharedElementCallback;
import android.app.TaskStackBuilder;
import android.content.ComponentName;
import android.content.Context;
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.IntentSender;
import android.content.IntentSender.SendIntentException;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.content.res.Resources.Theme;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.os.Bundle;
import android.os.PersistableBundle;
import android.transition.Scene;
import android.transition.TransitionManager;
import android.util.AttributeSet;
import android.view.ActionMode;
import android.view.ActionMode.Callback;
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.MenuInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.WindowManager;
import android.view.accessibility.AccessibilityEvent;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.Toolbar;

@SuppressLint("NewApi")
public class Target_ListActivity extends 
//SUPER_CLAsS
ContextWrapper
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
{

	Host_ListActivity mHostActivity;
	
	// contructor
	public Target_ListActivity() {
		this(null);
	}
	public Target_ListActivity(Context base) {
		super(base);
		
		mHostActivity = (Host_ListActivity) base;
	}
	
	
	public Intent getIntent() {
		return mHostActivity.getIntent();
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}

	
	public void setIntent(Intent newIntent) {
		mHostActivity.setIntent(newIntent);
	}

	
	public WindowManager getWindowManager() {
		return mHostActivity.getWindowManager();
	}

	
	public Window getWindow() {
		return mHostActivity.getWindow();
	}

//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	
	public LoaderManager getLoaderManager() {
		return mHostActivity.getLoaderManager();
	}

	
	public View getCurrentFocus() {
		return mHostActivity.getCurrentFocus();
	}

	
	protected void onCreate(Bundle savedInstanceState) {
	}

	
	public void onCreate(Bundle savedInstanceState,
			PersistableBundle persistentState) {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}

	
	protected void onRestoreInstanceState(Bundle savedInstanceState) {
	}

	
	public void onRestoreInstanceState(Bundle savedInstanceState,
			PersistableBundle persistentState) {
	}

	
	protected void onPostCreate(Bundle savedInstanceState) {
	}

	
	public void onPostCreate(Bundle savedInstanceState,
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
			PersistableBundle persistentState) {
	}

	
	protected void onStart() {
	}

	
	protected void onRestart() {
	}

	
	protected void onResume() {
	}

	
	protected void onPostResume() {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}

	
	protected void onNewIntent(Intent intent) {
	}

	
	protected void onSaveInstanceState(Bundle outState) {
	}

	
	public void onSaveInstanceState(Bundle outState,
			PersistableBundle outPersistentState) {
	}

	
	protected void onPause() {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}

	
	protected void onUserLeaveHint() {
	}

	
	public boolean onCreateThumbnail(Bitmap outBitmap, Canvas canvas) {
		return false;
	}

	
	public CharSequence onCreateDescription() {
		return null;
	}

	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public void onProvideAssistData(Bundle data) {
	}

	
	protected void onStop() {
	}

	
	protected void onDestroy() {
	}

	
	public void reportFullyDrawn() {
		mHostActivity.reportFullyDrawn();
	}

	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public void onConfigurationChanged(Configuration newConfig) {
	}

	
	public int getChangingConfigurations() {
		return mHostActivity.getChangingConfigurations();
	}

	
	public Object getLastNonConfigurationInstance() {
		return null;
	}

	
	public Object onRetainNonConfigurationInstance() {
		return null;
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template

	
	public void onLowMemory() {
	}

	
	public void onTrimMemory(int level) {
	}

	
	public FragmentManager getFragmentManager() {
		return mHostActivity.getFragmentManager();
	}

	
	public void onAttachFragment(Fragment fragment) {
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template

	
	public void startManagingCursor(Cursor c) {
		mHostActivity.startManagingCursor(c);
	}

	
	public void stopManagingCursor(Cursor c) {
		mHostActivity.stopManagingCursor(c);
	}

	
	public View findViewById(int id) {
		return mHostActivity.findViewById(id);
	}

	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public ActionBar getActionBar() {
		return mHostActivity.getActionBar();
	}

	
	public void setActionBar(Toolbar toolbar) {
		mHostActivity.setActionBar(toolbar);
	}

	
	public void setContentView(int layoutResID) {
		mHostActivity.setContentView(layoutResID);
	}

	
	public void setContentView(View view) {
		mHostActivity.setContentView(view);
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}

	
	public void setContentView(View view, LayoutParams params) {
		mHostActivity.setContentView(view, params);
	}

	
	public void addContentView(View view, LayoutParams params) {
		mHostActivity.addContentView(view, params);
	}

	
	public TransitionManager getContentTransitionManager() {
		return mHostActivity.getContentTransitionManager();
	}

//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	
	public void setContentTransitionManager(TransitionManager tm) {
		mHostActivity.setContentTransitionManager(tm);
	}

	
	public Scene getContentScene() {
		return mHostActivity.getContentScene();
	}

	
	public void setFinishOnTouchOutside(boolean finish) {
		mHostActivity.setFinishOnTouchOutside(finish);
	}

	
	public boolean onKeyDown(int keyCode, KeyEvent event) {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
		return false;
	}

	
	public boolean onKeyLongPress(int keyCode, KeyEvent event) {
		return false;
	}

	
	public boolean onKeyUp(int keyCode, KeyEvent event) {
		return false;
	}

	
	public boolean onKeyMultiple(int keyCode, int repeatCount, KeyEvent event) {
		return false;
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template

	
	public void onBackPressed() {
	}

	
	public boolean onKeyShortcut(int keyCode, KeyEvent event) {
		return false;
	}

	
	public boolean onTouchEvent(MotionEvent event) {
		return false;
	}

	
	public boolean onTrackballEvent(MotionEvent event) {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
		return false;
	}

	
	public boolean onGenericMotionEvent(MotionEvent event) {
		return false;
	}

	
	public void onUserInteraction() {
	}

	
	public void onWindowAttributesChanged(
			android.view.WindowManager.LayoutParams params) {
	}

//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	
	public void onContentChanged() {
	}

	
	public void onWindowFocusChanged(boolean hasFocus) {
	}

	
	public void onAttachedToWindow() {
	}

	
	public void onDetachedFromWindow() {
	}

	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public boolean hasWindowFocus() {
		return mHostActivity.hasWindowFocus();
	}

	
	public boolean dispatchKeyEvent(KeyEvent event) {
		return false;
	}

	
	public boolean dispatchKeyShortcutEvent(KeyEvent event) {
		return false;
	}

	
	public boolean dispatchTouchEvent(MotionEvent ev) {
		return false;
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}

	
	public boolean dispatchTrackballEvent(MotionEvent ev) {
		return false;
	}

	
	public boolean dispatchGenericMotionEvent(MotionEvent ev) {
		return false;
	}

	
	public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent event) {
		return false;
	}

//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
//	
//	public View onCreatePanelView(int featureId) {
//		// TODO Auto-generated method stub
//		return super.onCreatePanelView(featureId);
//	}
//
//	
//	public boolean onCreatePanelMenu(int featureId, Menu menu) {
//		// TODO Auto-generated method stub
//		return super.onCreatePanelMenu(featureId, menu);
//	}
//
//	
//	public boolean onPreparePanel(int featureId, View view, Menu menu) {
//		// TODO Auto-generated method stub
//		return super.onPreparePanel(featureId, view, menu);
//	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
//
//	
//	public boolean onMenuOpened(int featureId, Menu menu) {
//		// TODO Auto-generated method stub
//		return super.onMenuOpened(featureId, menu);
//	}
//
//	
//	public boolean onMenuItemSelected(int featureId, MenuItem item) {
//		// TODO Auto-generated method stub
//		return super.onMenuItemSelected(featureId, item);
//	}
//
//	
//	public void onPanelClosed(int featureId, Menu menu) {
//		// TODO Auto-generated method stub
//		super.onPanelClosed(featureId, menu);
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
//	}
//
//	
//	public void invalidateOptionsMenu() {
//		// TODO Auto-generated method stub
//		super.invalidateOptionsMenu();
//	}
//
//	
//	public boolean onCreateOptionsMenu(Menu menu) {
//		// TODO Auto-generated method stub
//		return super.onCreateOptionsMenu(menu);
//	}
//
//	
//	public boolean onPrepareOptionsMenu(Menu menu) {
//		// TODO Auto-generated method stub
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
//		return super.onPrepareOptionsMenu(menu);
//	}
//
//	
//	public boolean onOptionsItemSelected(MenuItem item) {
//		// TODO Auto-generated method stub
//		return super.onOptionsItemSelected(item);
//	}

	
	public boolean onNavigateUp() {
		return false;
	}

	
	public boolean onNavigateUpFromChild(Activity child) {
		return false;
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}

	
	public void onCreateNavigateUpTaskStack(TaskStackBuilder builder) {
	}

	
	public void onPrepareNavigateUpTaskStack(TaskStackBuilder builder) {
	}
//
//	
//	public void onOptionsMenuClosed(Menu menu) {
//		// TODO Auto-generated method stub
//		super.onOptionsMenuClosed(menu);
//	}
//
//	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
//	public void openOptionsMenu() {
//		// TODO Auto-generated method stub
//		super.openOptionsMenu();
//	}
//
//	
//	public void closeOptionsMenu() {
//		// TODO Auto-generated method stub
//		super.closeOptionsMenu();
//	}
//
//	
//	public void onCreateContextMenu(ContextMenu menu, View v,
//			ContextMenuInfo menuInfo) {
//		// TODO Auto-generated method stub
//		super.onCreateContextMenu(menu, v, menuInfo);
//	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
//
//	
//	public void registerForContextMenu(View view) {
//		// TODO Auto-generated method stub
//		super.registerForContextMenu(view);
//	}
//
//	
//	public void unregisterForContextMenu(View view) {
//		// TODO Auto-generated method stub
//		super.unregisterForContextMenu(view);
//	}
//
//	
//	public void openContextMenu(View view) {
//		// TODO Auto-generated method stub
//		super.openContextMenu(view);
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
//	}
//
//	
//	public void closeContextMenu() {
//		// TODO Auto-generated method stub
//		super.closeContextMenu();
//	}
//
//	
//	public boolean onContextItemSelected(MenuItem item) {
//		// TODO Auto-generated method stub
//		return super.onContextItemSelected(item);
//	}
//
//	
//	public void onContextMenuClosed(Menu menu) {
//		// TODO Auto-generated method stub
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
//		super.onContextMenuClosed(menu);
//	}
//
//	
//	protected Dialog onCreateDialog(int id) {
//		// TODO Auto-generated method stub
//		return super.onCreateDialog(id);
//	}
//
//	
//	protected Dialog onCreateDialog(int id, Bundle args) {
//		// TODO Auto-generated method stub
//		return super.onCreateDialog(id, args);
//	}
//
//	
//	protected void onPrepareDialog(int id, Dialog dialog) {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
//		// TODO Auto-generated method stub
//		super.onPrepareDialog(id, dialog);
//	}
//
//	
//	protected void onPrepareDialog(int id, Dialog dialog, Bundle args) {
//		// TODO Auto-generated method stub
//		super.onPrepareDialog(id, dialog, args);
//	}

	
	public boolean onSearchRequested() {
		return false;
	}

	
	public void startSearch(String initialQuery, boolean selectInitialQuery,
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
			Bundle appSearchData, boolean globalSearch) {
		mHostActivity.startSearch(initialQuery, selectInitialQuery, appSearchData, globalSearch);
	}

	
	public void triggerSearch(String query, Bundle appSearchData) {
		mHostActivity.triggerSearch(query, appSearchData);
	}

	
	public void takeKeyEvents(boolean get) {
		mHostActivity.takeKeyEvents(get);
	}

	
	public LayoutInflater getLayoutInflater() {
		return mHostActivity.getLayoutInflater();
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}

	
	public MenuInflater getMenuInflater() {
		return mHostActivity.getMenuInflater();
	}

	
	protected void onApplyThemeResource(Theme theme, int resid, boolean first) {
	}

	
	public void startActivityForResult(Intent intent, int requestCode) {
		mHostActivity.startActivityForResult(intent, requestCode);
	}

	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public void startActivityForResult(Intent intent, int requestCode,
			Bundle options) {
		mHostActivity.startActivityForResult(intent, requestCode, options);
	}

	
	public void startIntentSenderForResult(IntentSender intent,
			int requestCode, Intent fillInIntent, int flagsMask,
			int flagsValues, int extraFlags) throws SendIntentException {
		mHostActivity.startIntentSenderForResult(intent, requestCode, fillInIntent, flagsMask,
				flagsValues, extraFlags);
	}

	
	public void startIntentSenderForResult(IntentSender intent,
			int requestCode, Intent fillInIntent, int flagsMask,
			int flagsValues, int extraFlags, Bundle options)
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
			throws SendIntentException {
		mHostActivity.startIntentSenderForResult(intent, requestCode, fillInIntent, flagsMask,
				flagsValues, extraFlags, options);
	}

	
	public void startActivity(Intent intent) {
		mHostActivity.startActivity(intent);
	}

	
	public void startActivity(Intent intent, Bundle options) {
		mHostActivity.startActivity(intent, options);
	}

	
	public void startActivities(Intent[] intents) {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
		mHostActivity.startActivities(intents);
	}

	
	public void startActivities(Intent[] intents, Bundle options) {
		mHostActivity.startActivities(intents, options);
	}

	
	public void startIntentSender(IntentSender intent, Intent fillInIntent,
			int flagsMask, int flagsValues, int extraFlags)
			throws SendIntentException {
		mHostActivity.startIntentSender(intent, fillInIntent, flagsMask, flagsValues,
				extraFlags);
	}

	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public void startIntentSender(IntentSender intent, Intent fillInIntent,
			int flagsMask, int flagsValues, int extraFlags, Bundle options)
			throws SendIntentException {
		mHostActivity.startIntentSender(intent, fillInIntent, flagsMask, flagsValues,
				extraFlags, options);
	}

	
	public boolean startActivityIfNeeded(Intent intent, int requestCode) {
		return mHostActivity.startActivityIfNeeded(intent, requestCode);
	}

	
	public boolean startActivityIfNeeded(Intent intent, int requestCode,
			Bundle options) {
		return mHostActivity.startActivityIfNeeded(intent, requestCode, options);
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template

	
	public boolean startNextMatchingActivity(Intent intent) {
		return mHostActivity.startNextMatchingActivity(intent);
	}

	
	public boolean startNextMatchingActivity(Intent intent, Bundle options) {
		return mHostActivity.startNextMatchingActivity(intent, options);
	}

	
	public void startActivityFromChild(Activity child, Intent intent,
			int requestCode) {
		mHostActivity.startActivityFromChild(child, intent, requestCode);
	}

//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	
	public void startActivityFromChild(Activity child, Intent intent,
			int requestCode, Bundle options) {
		mHostActivity.startActivityFromChild(child, intent, requestCode, options);
	}

	
	public void startActivityFromFragment(Fragment fragment, Intent intent,
			int requestCode) {
		mHostActivity.startActivityFromFragment(fragment, intent, requestCode);
	}

	
	public void startActivityFromFragment(Fragment fragment, Intent intent,
			int requestCode, Bundle options) {
		mHostActivity.startActivityFromFragment(fragment, intent, requestCode, options);
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template

	
	public void startIntentSenderFromChild(Activity child, IntentSender intent,
			int requestCode, Intent fillInIntent, int flagsMask,
			int flagsValues, int extraFlags) throws SendIntentException {
		mHostActivity.startIntentSenderFromChild(child, intent, requestCode, fillInIntent,
				flagsMask, flagsValues, extraFlags);
	}

	
	public void startIntentSenderFromChild(Activity child, IntentSender intent,
			int requestCode, Intent fillInIntent, int flagsMask,
			int flagsValues, int extraFlags, Bundle options)
			throws SendIntentException {
		mHostActivity.startIntentSenderFromChild(child, intent, requestCode, fillInIntent,
				flagsMask, flagsValues, extraFlags, options);
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template

	
	public void overridePendingTransition(int enterAnim, int exitAnim) {
		mHostActivity.overridePendingTransition(enterAnim, exitAnim);
	}

	
	public String getCallingPackage() {
		return mHostActivity.getCallingPackage();
	}

	
	public ComponentName getCallingActivity() {
		return mHostActivity.getCallingActivity();
	}

	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public void setVisible(boolean visible) {
		mHostActivity.setVisible(visible);
	}

	
	public boolean isFinishing() {
		return mHostActivity.isFinishing();
	}

	
	public boolean isDestroyed() {
		return mHostActivity.isDestroyed();
	}
	
	public boolean isChangingConfigurations() {
		return mHostActivity.isChangingConfigurations();
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	
	public void recreate() {
		mHostActivity.recreate();
	}

	public void finish() {
		mHostActivity.finish();
	}
	
	public void finishAffinity() {
		mHostActivity.finishAffinity();
	}

	public void finishFromChild(Activity child) {
		mHostActivity.finishFromChild(child);
	}
	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public void finishAfterTransition() {
		mHostActivity.finishAfterTransition();
	}

	public void finishActivity(int requestCode) {
		mHostActivity.finishActivity(requestCode);
	}

	public void finishActivityFromChild(Activity child, int requestCode) {
		mHostActivity.finishActivityFromChild(child, requestCode);
	}
	
	public void finishAndRemoveTask() {
		mHostActivity.finishAndRemoveTask();
	}

	public boolean releaseInstance() {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
		return mHostActivity.releaseInstance();
	}

	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	}

	public void onActivityReenter(int resultCode, Intent data) {
	}
	
	public PendingIntent createPendingResult(int requestCode, Intent data,
			int flags) {
		return mHostActivity.createPendingResult(requestCode, data, flags);
	}

	public void setRequestedOrientation(int requestedOrientation) {
		mHostActivity.setRequestedOrientation(requestedOrientation);
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template

	public int getRequestedOrientation() {
		return mHostActivity.getRequestedOrientation();
	}
	
	public int getTaskId() {
		return mHostActivity.getTaskId();
	}
	
	public boolean isTaskRoot() {
		return mHostActivity.isTaskRoot();
	}
	
	public boolean moveTaskToBack(boolean nonRoot) {
		return mHostActivity.moveTaskToBack(nonRoot);
	}
	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public String getLocalClassName() {
		return mHostActivity.getLocalClassName();
	}
	
	public ComponentName getComponentName() {
		return mHostActivity.getComponentName();
	}
	
	public SharedPreferences getPreferences(int mode) {
		return mHostActivity.getPreferences(mode);
	}

	public Object getSystemService(String name) {
		return mHostActivity.getSystemService(name);
	}

	public void setTitle(CharSequence title) {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
		mHostActivity.setTitle(title);
	}

	
	public void setTitle(int titleId) {
		mHostActivity.setTitle(titleId);
	}

	public void setTitleColor(int textColor) {
		mHostActivity.setTitleColor(textColor);
	}

	protected void onTitleChanged(CharSequence title, int color) {
	}

	protected void onChildTitleChanged(Activity childActivity,
			CharSequence title) {
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}

	public void setTaskDescription(TaskDescription taskDescription) {
		mHostActivity.setTaskDescription(taskDescription);
	}
	
	public View onCreateView(String name, Context context, AttributeSet attrs) {
		return null;
	}
	
	public View onCreateView(View parent, String name, Context context,
			AttributeSet attrs) {
		return null;
	}

	
	public void dump(String prefix, FileDescriptor fd, PrintWriter writer,
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
			String[] args) {
		mHostActivity.dump(prefix, fd, writer, args);
	}

	public boolean isImmersive() {
		return mHostActivity.isImmersive();
	}
	public boolean requestVisibleBehind(boolean visible) {
		return mHostActivity.requestVisibleBehind(visible);
	}

	public void onVisibleBehindCanceled() {
	}
	
	public void onEnterAnimationComplete() {
	}
	
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	public void setImmersive(boolean i) {
		mHostActivity.setImmersive(i);
	}

	public ActionMode startActionMode(Callback callback) {
		return mHostActivity.startActionMode(callback);
	}
	
	public ActionMode onWindowStartingActionMode(Callback callback) {
		return null;
	}

	public void onActionModeStarted(ActionMode mode) {
	}
	
	public void onActionModeFinished(ActionMode mode) {
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template

	public boolean shouldUpRecreateTask(Intent targetIntent) {
		return mHostActivity.shouldUpRecreateTask(targetIntent);
	}

	
	public boolean navigateUpTo(Intent upIntent) {
		return mHostActivity.navigateUpTo(upIntent);
	}
	
	public boolean navigateUpToFromChild(Activity child, Intent upIntent) {
		return mHostActivity.navigateUpToFromChild(child, upIntent);
	}
	
	public Intent getParentActivityIntent() {
		return mHostActivity.getParentActivityIntent();
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template

	public void setEnterSharedElementCallback(SharedElementCallback callback) {
		mHostActivity.setEnterSharedElementCallback(callback);
	}

	
	public void setExitSharedElementCallback(SharedElementCallback callback) {
		mHostActivity.setExitSharedElementCallback(callback);
	}
	
	public void postponeEnterTransition() {
		mHostActivity.postponeEnterTransition();
	}

	public void startPostponedEnterTransition() {
		mHostActivity.startPostponedEnterTransition();
	}
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	
	public void startLockTask() {
		mHostActivity.startLockTask();
	}
	
	public void stopLockTask() {
		mHostActivity.stopLockTask();
	}
	
	// tag_start:ListActivity
	protected void onListItemClick(ListView l, View v, int position, long id) {
	}
	public void setListAdapter(ListAdapter adapter) {
		mHostActivity.setListAdapter(adapter);
	}
	public void setSelection(int position) {
		mHostActivity.setSelection(position);
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	}
	public int getSelectedItemPosition() {
		return mHostActivity.getSelectedItemPosition();
	}

	public long getSelectedItemId() {
		return mHostActivity.getSelectedItemId();
	}
	public ListView getListView() {
		return mHostActivity.getListView();
	}
	public ListAdapter getListAdapter() {
		return mHostActivity.getListAdapter();
	}
	// tag_end:ListActivity
	
	// tag_end:FragmentActivity
//do NOT edit this file, auto-generated by createTemplage.groovy from Target_Activity.java.template
	
}
